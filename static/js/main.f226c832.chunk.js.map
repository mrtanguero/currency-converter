{"version":3,"sources":["components/Dropdown.js","components/Message.js","App.js","index.js"],"names":["Dropdown","options","label","onChange","selected","optionList","map","cur","i","value","code","currency","className","Message","state","result","Number","isNaN","amount","from","to","App","handleChangeFrom","e","setState","target","handleChangeTo","fetchResult","a","NaN","fetch","response","json","data","rate","toFixed","console","error","message","type","this","onKeyUp","log","key","placeholder","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f226c832.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Dropdown({ options, label, onChange, selected }) {\n  const optionList = options.map((cur, i) => {\n    return (\n      <option key={i} value={cur.code}>\n        {cur.currency}\n      </option>\n    );\n  });\n\n  return (\n    <div className=\"field\">\n      <label>{label}</label>\n      <select\n        className=\"ui fluid dropdown\"\n        onChange={onChange}\n        value={selected}\n      >\n        {optionList}\n      </select>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Message({ state }) {\n  if (state.result === null) {\n    return null;\n  } else if (state.result === \"loading\") {\n    return (\n      <div className=\"ui active inverted dimmer\">\n        <div className=\"ui text loader\">Loading</div>\n      </div>\n    );\n  } else if (Number.isNaN(state.result)) {\n    return (\n      <div className=\"message red\">\n        <h2>Invalid amount.</h2>\n      </div>\n    );\n  } else if (state.result === \"error\") {\n    return (\n      <div className=\"message red\">\n        <h2>API call failed. Check console for details.</h2>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"message\">\n        <h1>\n          <span className=\"amount\">{state.amount}</span>\n          <span className=\"currency\">{state.from}</span> ={\" \"}\n          <span className=\"amount\">{state.result}</span>\n          <span className=\"currency\">{state.to}</span>\n        </h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Dropdown from \"./components/Dropdown\";\nimport Message from \"./components/Message\";\n\nconst options = [\n  {\n    currency: \"Euro (EUR)\",\n    code: \"EUR\",\n  },\n  {\n    currency: \"US Dollar (USD)\",\n    code: \"USD\",\n  },\n  {\n    currency: \"British Pound (GBP)\",\n    code: \"GBP\",\n  },\n  {\n    currency: \"Serbian Dinar (RSD)\",\n    code: \"RSD\",\n  },\n];\nexport default class App extends Component {\n  state = {\n    amount: \"\",\n    from: \"EUR\",\n    to: \"USD\",\n    result: null,\n  };\n\n  handleChangeFrom = (e) => {\n    this.setState({ from: e.target.value });\n  };\n\n  handleChangeTo = (e) => {\n    this.setState({ to: e.target.value });\n  };\n\n  fetchResult = async () => {\n    if (this.state.amount === \"\") return;\n    if (Number.isNaN(Number(this.state.amount))) {\n      this.setState({ result: NaN });\n      return;\n    }\n    this.setState({ result: \"loading\" });\n    try {\n      const response = await fetch(\n        `https://free.currconv.com/api/v7/convert?q=${this.state.from}_${this.state.to}&compact=ultra&apiKey=c76442b6c7b8eedc11f2`\n      );\n      const data = await response.json();\n      const rate = data[`${this.state.from}_${this.state.to}`];\n      this.setState({ result: (this.state.amount * rate).toFixed(2) });\n    } catch (error) {\n      this.setState({ result: \"error\" });\n      console.error(error.message);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"ui form container\">\n        <h1>Currency Converter</h1>\n        <div className=\"field\">\n          <label>Amount to convert</label>\n          <input\n            type=\"text\"\n            value={this.state.amount}\n            onChange={(e) => {\n              if (this.state.result !== null) this.setState({ result: null });\n              this.setState({ amount: e.target.value });\n            }}\n            onKeyUp={(e) => {\n              console.log(e);\n              if (e.key === \"Enter\") this.fetchResult();\n            }}\n            placeholder=\"Enter the amount\"\n          />\n        </div>\n        <Dropdown\n          options={options}\n          label=\"From\"\n          selected={this.state.from}\n          onChange={this.handleChangeFrom}\n        />\n        <Dropdown\n          options={options}\n          label=\"To\"\n          selected={this.state.to}\n          onChange={this.handleChangeTo}\n        />\n        <button className=\"ui violet button\" onClick={this.fetchResult}>\n          Convert\n        </button>\n        <Message state={this.state} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}